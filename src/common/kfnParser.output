   0  $accept : %entry% $end

   1  parse : error
   2        | EOF
   3        | module_def parse
   4        | one_fun_def parse
   5        | fun_defs parse

   6  module_def : MODULE INTEGER Eq IDENT
   7             | MODULE INTEGER

   8  fun_def : FUN ident ccode fun_flags Lt INTEGER Co module_id Co INTEGER Cm INTEGER Gt prototypes

   9  one_fun_def : fun_def

  10  fun_defs : VER versions fun_list END

  11  fun_list :
  12           | fun_def fun_list

  13  versions : version
  14           | version Cm versions

  15  version : IDENT
  16          | Lt vstamp
  17          | Gt vstamp
  18          | Lt Eq vstamp
  19          | Gt Eq vstamp

  20  vstamp : INTEGER
  21         | INTEGER Pt INTEGER
  22         | INTEGER Pt INTEGER Pt INTEGER
  23         | INTEGER Pt INTEGER Pt INTEGER Pt INTEGER

  24  module_id : INTEGER
  25            | IDENT

  26  ccode :
  27        | Lbr Rbr
  28        | Lbr IDENT Rbr
  29        | Lbr St IDENT Rbr
  30        | Lbr Eq IDENT Rbr
  31        | Lbr St Eq IDENT Rbr

  32  ident :
  33        | END
  34        | IDENT
  35        | IDENT IDENT

  36  fun_flags :
  37            | Lp flags Rp

  38  flags :
  39        | IDENT flags

  40  prototypes :
  41             | prototype prototypes

  42  prototype : Qu
  43            | Lp parameters

  44  parameters : Rp
  45             | parameter Rp
  46             | parameter Cm parameters

  47  parameter : preparm STRING postparm
  48            | preparm typedef postparm

  49  preparm :
  50          | Ha preparm
  51          | Qu preparm
  52          | Lt preparm
  53          | Gt preparm
  54          | Eq preparm

  55  postparm :
  56           | Pl postparm
  57           | STRING postparm

  58  typedef : INT
  59          | INTC
  60          | INTV
  61          | STR
  62          | STRC
  63          | STRV
  64          | RES
  65          | SPECIAL Lp special Rp
  66          | Lp complex Rp

  67  complex : compdef
  68          | compdef Cm complex

  69  compdef : typedef
  70          | typedef STRING
  71          | STRING

  72  special : specdef
  73          | specdef Cm special

  74  specdef : specid Co specflags Lbr complex Rbr
  75          | specid Co specflags IDENT Lp complex Rp

  76  specid : INTEGER Hy INTEGER
  77         | INTEGER

  78  specflags :
  79            | Ha specflags

  80  %entry% : '\001' parse

state 0
	$accept : . %entry% $end  (0)

	'\001'  shift 1
	.  error

	%entry%  goto 2


state 1
	%entry% : '\001' . parse  (80)

	error  shift 3
	EOF  shift 4
	MODULE  shift 5
	FUN  shift 6
	VER  shift 7
	.  error

	parse  goto 8
	module_def  goto 9
	one_fun_def  goto 10
	fun_defs  goto 11
	fun_def  goto 12


state 2
	$accept : %entry% . $end  (0)

	$end  accept


state 3
	parse : error .  (1)

	.  reduce 1


state 4
	parse : EOF .  (2)

	.  reduce 2


state 5
	module_def : MODULE . INTEGER Eq IDENT  (6)
	module_def : MODULE . INTEGER  (7)

	INTEGER  shift 13
	.  error


state 6
	fun_def : FUN . ident ccode fun_flags Lt INTEGER Co module_id Co INTEGER Cm INTEGER Gt prototypes  (8)
	ident : .  (32)

	END  shift 14
	IDENT  shift 15
	Lt  reduce 32
	Lp  reduce 32
	Lbr  reduce 32

	ident  goto 16


state 7
	fun_defs : VER . versions fun_list END  (10)

	Lt  shift 17
	Gt  shift 18
	IDENT  shift 19
	.  error

	versions  goto 20
	version  goto 21


state 8
	%entry% : '\001' parse .  (80)

	.  reduce 80


state 9
	parse : module_def . parse  (3)

	error  shift 3
	EOF  shift 4
	MODULE  shift 5
	FUN  shift 6
	VER  shift 7
	.  error

	parse  goto 22
	module_def  goto 9
	one_fun_def  goto 10
	fun_defs  goto 11
	fun_def  goto 12


state 10
	parse : one_fun_def . parse  (4)

	error  shift 3
	EOF  shift 4
	MODULE  shift 5
	FUN  shift 6
	VER  shift 7
	.  error

	parse  goto 23
	module_def  goto 9
	one_fun_def  goto 10
	fun_defs  goto 11
	fun_def  goto 12


state 11
	parse : fun_defs . parse  (5)

	error  shift 3
	EOF  shift 4
	MODULE  shift 5
	FUN  shift 6
	VER  shift 7
	.  error

	parse  goto 24
	module_def  goto 9
	one_fun_def  goto 10
	fun_defs  goto 11
	fun_def  goto 12


state 12
	one_fun_def : fun_def .  (9)

	.  reduce 9


state 13
	module_def : MODULE INTEGER . Eq IDENT  (6)
	module_def : MODULE INTEGER .  (7)

	Eq  shift 25
	error  reduce 7
	EOF  reduce 7
	MODULE  reduce 7
	FUN  reduce 7
	VER  reduce 7


state 14
	ident : END .  (33)

	.  reduce 33


state 15
	ident : IDENT .  (34)
	ident : IDENT . IDENT  (35)

	IDENT  shift 26
	Lt  reduce 34
	Lp  reduce 34
	Lbr  reduce 34


state 16
	fun_def : FUN ident . ccode fun_flags Lt INTEGER Co module_id Co INTEGER Cm INTEGER Gt prototypes  (8)
	ccode : .  (26)

	Lbr  shift 27
	Lt  reduce 26
	Lp  reduce 26

	ccode  goto 28


state 17
	version : Lt . vstamp  (16)
	version : Lt . Eq vstamp  (18)

	Eq  shift 29
	INTEGER  shift 30
	.  error

	vstamp  goto 31


state 18
	version : Gt . vstamp  (17)
	version : Gt . Eq vstamp  (19)

	Eq  shift 32
	INTEGER  shift 30
	.  error

	vstamp  goto 33


state 19
	version : IDENT .  (15)

	.  reduce 15


state 20
	fun_defs : VER versions . fun_list END  (10)
	fun_list : .  (11)

	FUN  shift 6
	END  reduce 11

	fun_def  goto 34
	fun_list  goto 35


state 21
	versions : version .  (13)
	versions : version . Cm versions  (14)

	Cm  shift 36
	FUN  reduce 13
	END  reduce 13


state 22
	parse : module_def parse .  (3)

	.  reduce 3


state 23
	parse : one_fun_def parse .  (4)

	.  reduce 4


state 24
	parse : fun_defs parse .  (5)

	.  reduce 5


state 25
	module_def : MODULE INTEGER Eq . IDENT  (6)

	IDENT  shift 37
	.  error


state 26
	ident : IDENT IDENT .  (35)

	.  reduce 35


state 27
	ccode : Lbr . Rbr  (27)
	ccode : Lbr . IDENT Rbr  (28)
	ccode : Lbr . St IDENT Rbr  (29)
	ccode : Lbr . Eq IDENT Rbr  (30)
	ccode : Lbr . St Eq IDENT Rbr  (31)

	Eq  shift 38
	Rbr  shift 39
	St  shift 40
	IDENT  shift 41
	.  error


state 28
	fun_def : FUN ident ccode . fun_flags Lt INTEGER Co module_id Co INTEGER Cm INTEGER Gt prototypes  (8)
	fun_flags : .  (36)

	Lp  shift 42
	Lt  reduce 36

	fun_flags  goto 43


state 29
	version : Lt Eq . vstamp  (18)

	INTEGER  shift 30
	.  error

	vstamp  goto 44


state 30
	vstamp : INTEGER .  (20)
	vstamp : INTEGER . Pt INTEGER  (21)
	vstamp : INTEGER . Pt INTEGER Pt INTEGER  (22)
	vstamp : INTEGER . Pt INTEGER Pt INTEGER Pt INTEGER  (23)

	Pt  shift 45
	FUN  reduce 20
	END  reduce 20
	Cm  reduce 20


state 31
	version : Lt vstamp .  (16)

	.  reduce 16


state 32
	version : Gt Eq . vstamp  (19)

	INTEGER  shift 30
	.  error

	vstamp  goto 46


state 33
	version : Gt vstamp .  (17)

	.  reduce 17


state 34
	fun_list : fun_def . fun_list  (12)
	fun_list : .  (11)

	FUN  shift 6
	END  reduce 11

	fun_def  goto 34
	fun_list  goto 47


state 35
	fun_defs : VER versions fun_list . END  (10)

	END  shift 48
	.  error


state 36
	versions : version Cm . versions  (14)

	Lt  shift 17
	Gt  shift 18
	IDENT  shift 19
	.  error

	versions  goto 49
	version  goto 21


state 37
	module_def : MODULE INTEGER Eq IDENT .  (6)

	.  reduce 6


state 38
	ccode : Lbr Eq . IDENT Rbr  (30)

	IDENT  shift 50
	.  error


state 39
	ccode : Lbr Rbr .  (27)

	.  reduce 27


state 40
	ccode : Lbr St . IDENT Rbr  (29)
	ccode : Lbr St . Eq IDENT Rbr  (31)

	Eq  shift 51
	IDENT  shift 52
	.  error


state 41
	ccode : Lbr IDENT . Rbr  (28)

	Rbr  shift 53
	.  error


state 42
	fun_flags : Lp . flags Rp  (37)
	flags : .  (38)

	IDENT  shift 54
	Rp  reduce 38

	flags  goto 55


state 43
	fun_def : FUN ident ccode fun_flags . Lt INTEGER Co module_id Co INTEGER Cm INTEGER Gt prototypes  (8)

	Lt  shift 56
	.  error


state 44
	version : Lt Eq vstamp .  (18)

	.  reduce 18


state 45
	vstamp : INTEGER Pt . INTEGER  (21)
	vstamp : INTEGER Pt . INTEGER Pt INTEGER  (22)
	vstamp : INTEGER Pt . INTEGER Pt INTEGER Pt INTEGER  (23)

	INTEGER  shift 57
	.  error


state 46
	version : Gt Eq vstamp .  (19)

	.  reduce 19


state 47
	fun_list : fun_def fun_list .  (12)

	.  reduce 12


state 48
	fun_defs : VER versions fun_list END .  (10)

	.  reduce 10


state 49
	versions : version Cm versions .  (14)

	.  reduce 14


state 50
	ccode : Lbr Eq IDENT . Rbr  (30)

	Rbr  shift 58
	.  error


state 51
	ccode : Lbr St Eq . IDENT Rbr  (31)

	IDENT  shift 59
	.  error


state 52
	ccode : Lbr St IDENT . Rbr  (29)

	Rbr  shift 60
	.  error


state 53
	ccode : Lbr IDENT Rbr .  (28)

	.  reduce 28


state 54
	flags : IDENT . flags  (39)
	flags : .  (38)

	IDENT  shift 54
	Rp  reduce 38

	flags  goto 61


state 55
	fun_flags : Lp flags . Rp  (37)

	Rp  shift 62
	.  error


state 56
	fun_def : FUN ident ccode fun_flags Lt . INTEGER Co module_id Co INTEGER Cm INTEGER Gt prototypes  (8)

	INTEGER  shift 63
	.  error


state 57
	vstamp : INTEGER Pt INTEGER .  (21)
	vstamp : INTEGER Pt INTEGER . Pt INTEGER  (22)
	vstamp : INTEGER Pt INTEGER . Pt INTEGER Pt INTEGER  (23)

	Pt  shift 64
	FUN  reduce 21
	END  reduce 21
	Cm  reduce 21


state 58
	ccode : Lbr Eq IDENT Rbr .  (30)

	.  reduce 30


state 59
	ccode : Lbr St Eq IDENT . Rbr  (31)

	Rbr  shift 65
	.  error


state 60
	ccode : Lbr St IDENT Rbr .  (29)

	.  reduce 29


state 61
	flags : IDENT flags .  (39)

	.  reduce 39


state 62
	fun_flags : Lp flags Rp .  (37)

	.  reduce 37


state 63
	fun_def : FUN ident ccode fun_flags Lt INTEGER . Co module_id Co INTEGER Cm INTEGER Gt prototypes  (8)

	Co  shift 66
	.  error


state 64
	vstamp : INTEGER Pt INTEGER Pt . INTEGER  (22)
	vstamp : INTEGER Pt INTEGER Pt . INTEGER Pt INTEGER  (23)

	INTEGER  shift 67
	.  error


state 65
	ccode : Lbr St Eq IDENT Rbr .  (31)

	.  reduce 31


state 66
	fun_def : FUN ident ccode fun_flags Lt INTEGER Co . module_id Co INTEGER Cm INTEGER Gt prototypes  (8)

	INTEGER  shift 68
	IDENT  shift 69
	.  error

	module_id  goto 70


state 67
	vstamp : INTEGER Pt INTEGER Pt INTEGER .  (22)
	vstamp : INTEGER Pt INTEGER Pt INTEGER . Pt INTEGER  (23)

	Pt  shift 71
	FUN  reduce 22
	END  reduce 22
	Cm  reduce 22


state 68
	module_id : INTEGER .  (24)

	.  reduce 24


state 69
	module_id : IDENT .  (25)

	.  reduce 25


state 70
	fun_def : FUN ident ccode fun_flags Lt INTEGER Co module_id . Co INTEGER Cm INTEGER Gt prototypes  (8)

	Co  shift 72
	.  error


state 71
	vstamp : INTEGER Pt INTEGER Pt INTEGER Pt . INTEGER  (23)

	INTEGER  shift 73
	.  error


state 72
	fun_def : FUN ident ccode fun_flags Lt INTEGER Co module_id Co . INTEGER Cm INTEGER Gt prototypes  (8)

	INTEGER  shift 74
	.  error


state 73
	vstamp : INTEGER Pt INTEGER Pt INTEGER Pt INTEGER .  (23)

	.  reduce 23


state 74
	fun_def : FUN ident ccode fun_flags Lt INTEGER Co module_id Co INTEGER . Cm INTEGER Gt prototypes  (8)

	Cm  shift 75
	.  error


state 75
	fun_def : FUN ident ccode fun_flags Lt INTEGER Co module_id Co INTEGER Cm . INTEGER Gt prototypes  (8)

	INTEGER  shift 76
	.  error


state 76
	fun_def : FUN ident ccode fun_flags Lt INTEGER Co module_id Co INTEGER Cm INTEGER . Gt prototypes  (8)

	Gt  shift 77
	.  error


state 77
	fun_def : FUN ident ccode fun_flags Lt INTEGER Co module_id Co INTEGER Cm INTEGER Gt . prototypes  (8)
	prototypes : .  (40)

	Lp  shift 78
	Qu  shift 79
	error  reduce 40
	EOF  reduce 40
	MODULE  reduce 40
	FUN  reduce 40
	VER  reduce 40
	END  reduce 40

	prototypes  goto 80
	prototype  goto 81


state 78
	prototype : Lp . parameters  (43)
	preparm : .  (49)

	Lt  shift 82
	Gt  shift 83
	Eq  shift 84
	Rp  shift 85
	Qu  shift 86
	Ha  shift 87
	Lp  reduce 49
	INT  reduce 49
	INTC  reduce 49
	INTV  reduce 49
	STR  reduce 49
	STRC  reduce 49
	STRV  reduce 49
	RES  reduce 49
	SPECIAL  reduce 49
	STRING  reduce 49

	parameters  goto 88
	parameter  goto 89
	preparm  goto 90


state 79
	prototype : Qu .  (42)

	.  reduce 42


state 80
	fun_def : FUN ident ccode fun_flags Lt INTEGER Co module_id Co INTEGER Cm INTEGER Gt prototypes .  (8)

	.  reduce 8


state 81
	prototypes : prototype . prototypes  (41)
	prototypes : .  (40)

	Lp  shift 78
	Qu  shift 79
	error  reduce 40
	EOF  reduce 40
	MODULE  reduce 40
	FUN  reduce 40
	VER  reduce 40
	END  reduce 40

	prototypes  goto 91
	prototype  goto 81


state 82
	preparm : Lt . preparm  (52)
	preparm : .  (49)

	Lt  shift 82
	Gt  shift 83
	Eq  shift 84
	Qu  shift 86
	Ha  shift 87
	Lp  reduce 49
	INT  reduce 49
	INTC  reduce 49
	INTV  reduce 49
	STR  reduce 49
	STRC  reduce 49
	STRV  reduce 49
	RES  reduce 49
	SPECIAL  reduce 49
	STRING  reduce 49

	preparm  goto 92


state 83
	preparm : Gt . preparm  (53)
	preparm : .  (49)

	Lt  shift 82
	Gt  shift 83
	Eq  shift 84
	Qu  shift 86
	Ha  shift 87
	Lp  reduce 49
	INT  reduce 49
	INTC  reduce 49
	INTV  reduce 49
	STR  reduce 49
	STRC  reduce 49
	STRV  reduce 49
	RES  reduce 49
	SPECIAL  reduce 49
	STRING  reduce 49

	preparm  goto 93


state 84
	preparm : Eq . preparm  (54)
	preparm : .  (49)

	Lt  shift 82
	Gt  shift 83
	Eq  shift 84
	Qu  shift 86
	Ha  shift 87
	Lp  reduce 49
	INT  reduce 49
	INTC  reduce 49
	INTV  reduce 49
	STR  reduce 49
	STRC  reduce 49
	STRV  reduce 49
	RES  reduce 49
	SPECIAL  reduce 49
	STRING  reduce 49

	preparm  goto 94


state 85
	parameters : Rp .  (44)

	.  reduce 44


state 86
	preparm : Qu . preparm  (51)
	preparm : .  (49)

	Lt  shift 82
	Gt  shift 83
	Eq  shift 84
	Qu  shift 86
	Ha  shift 87
	Lp  reduce 49
	INT  reduce 49
	INTC  reduce 49
	INTV  reduce 49
	STR  reduce 49
	STRC  reduce 49
	STRV  reduce 49
	RES  reduce 49
	SPECIAL  reduce 49
	STRING  reduce 49

	preparm  goto 95


state 87
	preparm : Ha . preparm  (50)
	preparm : .  (49)

	Lt  shift 82
	Gt  shift 83
	Eq  shift 84
	Qu  shift 86
	Ha  shift 87
	Lp  reduce 49
	INT  reduce 49
	INTC  reduce 49
	INTV  reduce 49
	STR  reduce 49
	STRC  reduce 49
	STRV  reduce 49
	RES  reduce 49
	SPECIAL  reduce 49
	STRING  reduce 49

	preparm  goto 96


state 88
	prototype : Lp parameters .  (43)

	.  reduce 43


state 89
	parameters : parameter . Rp  (45)
	parameters : parameter . Cm parameters  (46)

	Cm  shift 97
	Rp  shift 98
	.  error


state 90
	parameter : preparm . STRING postparm  (47)
	parameter : preparm . typedef postparm  (48)

	Lp  shift 99
	INT  shift 100
	INTC  shift 101
	INTV  shift 102
	STR  shift 103
	STRC  shift 104
	STRV  shift 105
	RES  shift 106
	SPECIAL  shift 107
	STRING  shift 108
	.  error

	typedef  goto 109


state 91
	prototypes : prototype prototypes .  (41)

	.  reduce 41


state 92
	preparm : Lt preparm .  (52)

	.  reduce 52


state 93
	preparm : Gt preparm .  (53)

	.  reduce 53


state 94
	preparm : Eq preparm .  (54)

	.  reduce 54


state 95
	preparm : Qu preparm .  (51)

	.  reduce 51


state 96
	preparm : Ha preparm .  (50)

	.  reduce 50


state 97
	parameters : parameter Cm . parameters  (46)
	preparm : .  (49)

	Lt  shift 82
	Gt  shift 83
	Eq  shift 84
	Rp  shift 85
	Qu  shift 86
	Ha  shift 87
	Lp  reduce 49
	INT  reduce 49
	INTC  reduce 49
	INTV  reduce 49
	STR  reduce 49
	STRC  reduce 49
	STRV  reduce 49
	RES  reduce 49
	SPECIAL  reduce 49
	STRING  reduce 49

	parameters  goto 110
	parameter  goto 89
	preparm  goto 90


state 98
	parameters : parameter Rp .  (45)

	.  reduce 45


state 99
	typedef : Lp . complex Rp  (66)

	Lp  shift 99
	INT  shift 100
	INTC  shift 101
	INTV  shift 102
	STR  shift 103
	STRC  shift 104
	STRV  shift 105
	RES  shift 106
	SPECIAL  shift 107
	STRING  shift 111
	.  error

	typedef  goto 112
	complex  goto 113
	compdef  goto 114


state 100
	typedef : INT .  (58)

	.  reduce 58


state 101
	typedef : INTC .  (59)

	.  reduce 59


state 102
	typedef : INTV .  (60)

	.  reduce 60


state 103
	typedef : STR .  (61)

	.  reduce 61


state 104
	typedef : STRC .  (62)

	.  reduce 62


state 105
	typedef : STRV .  (63)

	.  reduce 63


state 106
	typedef : RES .  (64)

	.  reduce 64


state 107
	typedef : SPECIAL . Lp special Rp  (65)

	Lp  shift 115
	.  error


state 108
	parameter : preparm STRING . postparm  (47)
	postparm : .  (55)

	Pl  shift 116
	STRING  shift 117
	Cm  reduce 55
	Rp  reduce 55

	postparm  goto 118


state 109
	parameter : preparm typedef . postparm  (48)
	postparm : .  (55)

	Pl  shift 116
	STRING  shift 117
	Cm  reduce 55
	Rp  reduce 55

	postparm  goto 119


state 110
	parameters : parameter Cm parameters .  (46)

	.  reduce 46


state 111
	compdef : STRING .  (71)

	.  reduce 71


state 112
	compdef : typedef .  (69)
	compdef : typedef . STRING  (70)

	STRING  shift 120
	Cm  reduce 69
	Rp  reduce 69
	Rbr  reduce 69


state 113
	typedef : Lp complex . Rp  (66)

	Rp  shift 121
	.  error


state 114
	complex : compdef .  (67)
	complex : compdef . Cm complex  (68)

	Cm  shift 122
	Rp  reduce 67
	Rbr  reduce 67


state 115
	typedef : SPECIAL Lp . special Rp  (65)

	INTEGER  shift 123
	.  error

	special  goto 124
	specdef  goto 125
	specid  goto 126


state 116
	postparm : Pl . postparm  (56)
	postparm : .  (55)

	Pl  shift 116
	STRING  shift 117
	Cm  reduce 55
	Rp  reduce 55

	postparm  goto 127


state 117
	postparm : STRING . postparm  (57)
	postparm : .  (55)

	Pl  shift 116
	STRING  shift 117
	Cm  reduce 55
	Rp  reduce 55

	postparm  goto 128


state 118
	parameter : preparm STRING postparm .  (47)

	.  reduce 47


state 119
	parameter : preparm typedef postparm .  (48)

	.  reduce 48


state 120
	compdef : typedef STRING .  (70)

	.  reduce 70


state 121
	typedef : Lp complex Rp .  (66)

	.  reduce 66


state 122
	complex : compdef Cm . complex  (68)

	Lp  shift 99
	INT  shift 100
	INTC  shift 101
	INTV  shift 102
	STR  shift 103
	STRC  shift 104
	STRV  shift 105
	RES  shift 106
	SPECIAL  shift 107
	STRING  shift 111
	.  error

	typedef  goto 112
	complex  goto 129
	compdef  goto 114


state 123
	specid : INTEGER . Hy INTEGER  (76)
	specid : INTEGER .  (77)

	Hy  shift 130
	Co  reduce 77


state 124
	typedef : SPECIAL Lp special . Rp  (65)

	Rp  shift 131
	.  error


state 125
	special : specdef .  (72)
	special : specdef . Cm special  (73)

	Cm  shift 132
	Rp  reduce 72


state 126
	specdef : specid . Co specflags Lbr complex Rbr  (74)
	specdef : specid . Co specflags IDENT Lp complex Rp  (75)

	Co  shift 133
	.  error


state 127
	postparm : Pl postparm .  (56)

	.  reduce 56


state 128
	postparm : STRING postparm .  (57)

	.  reduce 57


state 129
	complex : compdef Cm complex .  (68)

	.  reduce 68


state 130
	specid : INTEGER Hy . INTEGER  (76)

	INTEGER  shift 134
	.  error


state 131
	typedef : SPECIAL Lp special Rp .  (65)

	.  reduce 65


state 132
	special : specdef Cm . special  (73)

	INTEGER  shift 123
	.  error

	special  goto 135
	specdef  goto 125
	specid  goto 126


state 133
	specdef : specid Co . specflags Lbr complex Rbr  (74)
	specdef : specid Co . specflags IDENT Lp complex Rp  (75)
	specflags : .  (78)

	Ha  shift 136
	Lbr  reduce 78
	IDENT  reduce 78

	specflags  goto 137


state 134
	specid : INTEGER Hy INTEGER .  (76)

	.  reduce 76


state 135
	special : specdef Cm special .  (73)

	.  reduce 73


state 136
	specflags : Ha . specflags  (79)
	specflags : .  (78)

	Ha  shift 136
	Lbr  reduce 78
	IDENT  reduce 78

	specflags  goto 138


state 137
	specdef : specid Co specflags . Lbr complex Rbr  (74)
	specdef : specid Co specflags . IDENT Lp complex Rp  (75)

	Lbr  shift 139
	IDENT  shift 140
	.  error


state 138
	specflags : Ha specflags .  (79)

	.  reduce 79


state 139
	specdef : specid Co specflags Lbr . complex Rbr  (74)

	Lp  shift 99
	INT  shift 100
	INTC  shift 101
	INTV  shift 102
	STR  shift 103
	STRC  shift 104
	STRV  shift 105
	RES  shift 106
	SPECIAL  shift 107
	STRING  shift 111
	.  error

	typedef  goto 112
	complex  goto 141
	compdef  goto 114


state 140
	specdef : specid Co specflags IDENT . Lp complex Rp  (75)

	Lp  shift 142
	.  error


state 141
	specdef : specid Co specflags Lbr complex . Rbr  (74)

	Rbr  shift 143
	.  error


state 142
	specdef : specid Co specflags IDENT Lp . complex Rp  (75)

	Lp  shift 99
	INT  shift 100
	INTC  shift 101
	INTV  shift 102
	STR  shift 103
	STRC  shift 104
	STRV  shift 105
	RES  shift 106
	SPECIAL  shift 107
	STRING  shift 111
	.  error

	typedef  goto 112
	complex  goto 144
	compdef  goto 114


state 143
	specdef : specid Co specflags Lbr complex Rbr .  (74)

	.  reduce 74


state 144
	specdef : specid Co specflags IDENT Lp complex . Rp  (75)

	Rp  shift 145
	.  error


state 145
	specdef : specid Co specflags IDENT Lp complex Rp .  (75)

	.  reduce 75


34 terminals, 29 nonterminals
81 grammar rules, 146 states
